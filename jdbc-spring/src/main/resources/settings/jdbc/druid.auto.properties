## 简化配置的DruidDataSource, 切换数据库只需要修改一行配置(jdbc.xxx)
# 配置文件应分为两部分, 一是需要开发评估才能决定修改的, 二是运维人员即可修改的
# 关于数据库的配置, 用户名/密码/访问地址/数据库名是运维的事, 其他的协议类型/各种参数是开发的事
# 运维人员的这部分配置文件应该尽量集中到一个文件中

## config第1段是dbtype.subtype, subtype可以没有. 例如mysql, mysql.8, oralce, oralce.sid
# 通过dbtype.subtype从properties之中自动查找jdbc.url/jdbc.params/jdbc.driver/jdbc.testquery
# 如mysql.8查找jdbc.url, 优先查找jdbc.url.mysql.8, 如果没有再查找jdbc.url.mysql, 最后查找jdbc.url
## 密码支持两种配置方式, 第1种是明文密码, 第2种是加密密码
# dbtype:username:password@address/dbname:schema // 明文密码
# dbtype:username@address/dbname:schema?EncryptedPassword // 加密密码
# 数据库密码加密: java -cp qdbp-jdbc-spring.jar com.gitee.qdbp.jdbc.support.AutoDruidDataSource password

## config运维配置的部分(用户名/密码/访问地址/数据库名集中到一行, 切换数据库改这一行就行了)
## MySQL
# jdbc.xxx = mysql:username:password@127.0.0.1:3306/dbname
## MySQL(加密的密码放在最后)
# jdbc.xxx = mysql:username@127.0.0.1:3306/dbname?EncryptedPassword
## MariaDB
# jdbc.xxx = mariadb:username:password@127.0.0.1:3306/dbname
## Oralce-DbName
# jdbc.xxx = oralce:username:password@127.0.0.1:1521/dbname
## Oralce-SID
# jdbc.xxx = oralce.sid:username:password@127.0.0.1:1521/dbname
## DB2 需要schema
# jdbc.xxx = db2:username:password@127.0.0.1:50000/dbname:schema
## H2 嵌入式(不需要ip:port)
# jdbc.xxx = h2.embed:username:password@~/dbname
## H2 TCP模式
# jdbc.xxx = h2.tcp:username:password@127.0.0.1:8082/dbname
## H2 内存模式(不需要username/password/ip:port)
# jdbc.xxx = h2.mem@~/dbname
## SqlServer
# jdbc.xxx = sqlserver:username:password@127.0.0.1:1433/dbname
## SqlServer 老版本
# jdbc.xxx = sqlserver.2000:username:password@127.0.0.1:1433/dbname
## PostgreSQL
# jdbc.xxx = postgresql:username:password@127.0.0.1:5432/dbname

## URL配置
## mysql
jdbc.url.mysql = jdbc:mysql://{address}/{dbname}
## MariaDB
jdbc.url.mariadb = jdbc:mariadb://{address}/{dbname}
## Oracle-DbName
jdbc.url.oracle = jdbc:oracle:thin:@//{address}/{dbname}
## Oracle-SID
jdbc.url.oracle.sid = jdbc:oracle:thin:{address}:{dbname}
## Oracle-TNS
jdbc.url.oracle.tns = jdbc:oracle:thin:@{dbname}
## DB2
jdbc.url.db2 = jdbc:db2://{address}/{dbname}
## H2 Embedded
jdbc.url.h2.embed = jdbc:h2:~/{dbname}
## H2 内存
jdbc.url.h2.mem = jdbc:h2:mem:{dbname}
## H2 TCP
jdbc.url.h2.tcp = jdbc:h2:tcp://{address}/~/{dbname}
## SqlServer
jdbc.url.sqlserver = jdbc:sqlserver://{address};DatabaseName={dbname}
## SqlServer 2000
jdbc.url.sqlserver.2000 = jdbc:microsoft:sqlserver://{address};DatabaseName={dbname}
## PostgreSQL
jdbc.url.postgresql = jdbc:postgresql://{address}/{dbname}

## 测试语句配置
jdbc.testquery.mysql = SELECT 1
jdbc.testquery.mariadb = SELECT 1
jdbc.testquery.oracle = SELECT 'x' FROM DUAL
jdbc.testquery.db2 = SELECT 1 FROM SYSIBM.SYSDUMMY1
jdbc.testquery.h2 = SELECT 1
jdbc.testquery.postgresql = SELECT 1
jdbc.testquery.sqlserver = SELECT 1
jdbc.testquery.derby = SELECT 1 FROM SYSIBM.SYSDUMMY1
jdbc.testquery.hsqldb = SELECT 1 FROM INFORMATION_SCHEMA.SYSTEM_USERS

## Driver配置(新版数据库一般都能自动匹配)
# jdbc.driver.db2 = com.ibm.db2.jcc.DB2Driver
# jdbc.driver.mariadb = org.mariadb.jdbc.Driver

## 参数(这部分应该根据实际情况在业务配置文件中进行覆盖)
jdbc.params.db2 = :currentSchema={schema};
jdbc.params.mysql   = ?allowMultiQueries=true&rewriteBatchedStatements=true&tinyInt1isBit=false&useUnicode=true&characterEncoding=UTF-8&autoReconnect=true&failOverReadOnly=false&useSSL=false
jdbc.params.mariadb = ?allowMultiQueries=true&rewriteBatchedStatements=true&tinyInt1isBit=false&useUnicode=true&characterEncoding=UTF-8&autoReconnect=true&failOverReadOnly=false&useSSL=false
jdbc.params.postgresql = ?currentSchema={schema}&useUnicode=true&characterEncoding=UTF-8
jdbc.params.h2 = ;MODE=MYSQL;AUTO_RECONNECT=TRUE
