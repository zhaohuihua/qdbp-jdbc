<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd">

	<bean id="dbPluginContainer" class="com.gitee.qdbp.jdbc.plugins.DbPluginContainer">
		<property name="dbVersionFinder">
			<bean class="com.gitee.qdbp.jdbc.plugins.impl.DataSourceDbVersionFinder" />
		</property>
		<property name="operatorContainer">
			<bean class="com.gitee.qdbp.jdbc.plugins.impl.SimpleDbOperatorContainer" />
		</property>
		<property name="sqlFormatter">
			<bean class="com.gitee.qdbp.jdbc.plugins.impl.SimpleSqlFormatter" />
		</property>
		<property name="tableInfoScans">
			<bean class="com.gitee.qdbp.jdbc.plugins.impl.SimpleTableInfoScans">
				<property name="primaryKeyMatcher">
					<bean class="com.gitee.qdbp.able.matches.EqualsStringMatcher">
						<constructor-arg value="${qdbc.entityData.primaryKeyField:id}" />
					</bean>
				</property>
				<property name="nameConverter">
					<bean class="com.gitee.qdbp.jdbc.plugins.impl.SimpleNameConverter" />
				</property>
				<property name="tableNameScans">
					<bean class="com.gitee.qdbp.jdbc.plugins.impl.StaticFieldTableNameScans">
						<constructor-arg value="${qdbc.entityData.tableNameField:TABLE}" />
					</bean>
				</property>
				<property name="commonFieldResolver">
					<bean class="com.gitee.qdbp.jdbc.plugins.impl.SimpleCommonFieldResolver">
						<property name="commonPackagePatterns">
							<value>${qdbc.entityData.commonPackages:}</value>
						</property>
						<property name="commonFieldNamePatterns">
							<value>
								${qdbc.entityData.createUserField:creatorId}
								${qdbc.entityData.createTimeField:createTime}
								${qdbc.entityData.updateUserField:updatorId}
								${qdbc.entityData.updateTimeField:updateTime}
								${qdbc.entityData.logicalDeleteField:dataState}
								${qdbc.entityData.commonFields:}
							</value>
						</property>
					</bean>
				</property>
			</bean>
		</property>
		<property name="entityFillHandler">
			<bean class="com.gitee.qdbp.jdbc.plugins.impl.SimpleEntityFillHandler">
				<property name="createUserField" value="${qdbc.entityData.createUserField:creatorId}" />
				<property name="createTimeField" value="${qdbc.entityData.createTimeField:createTime}" />
				<property name="updateUserField" value="${qdbc.entityData.updateUserField:updatorId}" />
				<property name="updateTimeField" value="${qdbc.entityData.updateTimeField:updateTime}" />
				<property name="logicalDeleteField" value="${qdbc.entityData.logicalDeleteField:dataState}" />
				<property name="logicalDeleteRandoms" value="${qdbc.entityData.logicalDeleteRandoms:0}" />
				<property name="dataEffectiveFlag">
					<bean class="org.springframework.beans.factory.config.FieldRetrievingFactoryBean">
						<property name="staticField" value="${qdbc.entityData.logicalDeleteClass}.${qdbc.entityData.dataEffectiveFlag}" />
					</bean>
				</property>
				<property name="dataIneffectiveFlag">
					<bean class="org.springframework.beans.factory.config.FieldRetrievingFactoryBean">
						<property name="staticField" value="${qdbc.entityData.logicalDeleteClass}.${qdbc.entityData.dataIneffectiveFlag}" />
					</bean>
				</property>
				<property name="entityFillBizResolver">
					<bean class="com.gitee.qdbp.jdbc.plugins.impl.SimpleEntityFillBizResolver" />
				</property>
			</bean>
		</property>
		<property name="toDbValueConverter">
			<bean class="com.gitee.qdbp.jdbc.plugins.impl.SpringVarToDbValueConverter">
				<property name="conversionService" ref="conversionService" />
				<property name="enumConvertUseOrdinal" value="${qdbc.converter.enumConvertUseOrdinal:true}" />
				<property name="enumConvertEspecialText" value="${qdbc.converter.enumConvertEspecialList:}" />
				<property name="untypedObjectConvertEnabled" value="${qdbc.converter.untypedObjectConvertEnabled:true}" />
				<property name="untypedObjectConvertEspecialText" value="${qdbc.converter.untypedObjectConvertEspecialList:}" />
				<property name="objectToStringUseJson" value="${qdbc.converter.objectToStringUseJson:true}" />
				<property name="objectToStringEspecialText" value="${qdbc.converter.objectToStringEspecialList:}" />
			</bean>
		</property>
		<property name="mapToBeanConverter">
			<bean class="com.gitee.qdbp.jdbc.plugins.impl.SpringMapToBeanConverter">
				<property name="conversionService" ref="conversionService" />
			</bean>
		</property>
		<!--
		<property name="defaultBatchInsertExecutor">
			<bean class="com.gitee.qdbp.jdbc.plugins.impl.BatchOperateByForEachExecutor"/>
		</property>
		<property name="defaultBatchUpdateExecutor">
			<bean class="com.gitee.qdbp.jdbc.plugins.impl.BatchOperateByForEachExecutor"/>
		</property>
		<property name="batchInsertExecutors">
			<list>
				<bean class="com.gitee.qdbp.jdbc.plugins.impl.BatchInsertByMultiValuesExecutor"/>
			</list>
		</property>
		<property name="batchUpdateExecutors">
			<list>
				<bean class="com.gitee.qdbp.jdbc.plugins.impl.BatchUpdateByJoinUsingExecutor"/>
			</list>
		</property>
		-->
	</bean>

</beans>
