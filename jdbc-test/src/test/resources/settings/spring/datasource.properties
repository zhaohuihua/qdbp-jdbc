## 连接池异步初始化
datasource.asyncInit = true
## 连接池初始化数量(生产环境可设置为10)
datasource.initialSize = 1
## 连接池最小空闲连接数(生产环境可设置为5)
datasource.minIdle = 1
## 连接池最大活动连接数(生产环境可设置为50-100)
datasource.maxActive = 20
## 获取连接等待超时的时间
datasource.maxWait = 60000
## 间隔多久才进行一次检测, 检测需要关闭的空闲连接, (单位:毫秒)
datasource.timeBetweenEvictionRunsMillis = 120000
## 一个连接在池中的最小/最大生存时间, (单位:毫秒)
datasource.minEvictableIdleTimeMillis = 1800000
datasource.maxEvictableIdleTimeMillis = 25200000
## 何时测试连接是否可用
datasource.testWhileIdle = true
datasource.testOnBorrow = false
datasource.testOnReturn = false
## 打开PSCache, 并且指定每个连接上PSCache的大小
datasource.poolPreparedStatements = true
datasource.maxPoolPreparedStatementPerConnectionSize = 20
## 是否合并多个DruidDataSource的监控数据
datasource.useGlobalDataSourceStat = false
## 连接出错后再尝试连接几次
datasource.connectionErrorRetryAttempts = 1
## 请求连接失败后是否断开, 默认为false
## 如果设为true, 失败后就断开, 就算数据库恢复正常也不自动重连
datasource.breakAfterAcquireFailure = false

## 如果连接泄露, 是否回收泄露的连接
## 正常情况不应出现连接泄露; 而且如果业务中确实存在长时间任务, 可能被误杀
datasource.removeAbandoned = false
## 如果回收了泄露的连接，是否要打印
datasource.logAbandoned = true
## 获取连接后多久未关闭时回收连接
## 这个时长是相对于从连接池获取连接的时间, 而不是这个连接的最后一次执行时间
datasource.removeAbandonedTimeoutMillis = 1800000
